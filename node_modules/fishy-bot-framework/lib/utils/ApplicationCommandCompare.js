"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplicationCommandCompare = void 0;
// Shit load of code used for comparing an interaction from discord, to one in the code.
// Can be used to check if a updated
function ApplicationCommandCompare(discord_interaction, interaction) {
    var _a, _b, _c, _d;
    function interaction_options_equality(discord_options, interaction_options) {
        let done = [];
        let failed = false;
        interaction_options.forEach((interaction_option) => {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
            if (failed)
                return;
            if (!discord_options.find((option) => option.name === interaction_option.name)) {
                failed = true;
                return;
            }
            let discord_option = discord_options.find((option) => option.name === interaction_option.name);
            if (discord_option.name === interaction_option.name &&
                discord_option.description === interaction_option.description &&
                discord_option.type === interaction_option.type &&
                discord_option.required === interaction_option.required &&
                ((_a = discord_option.choices) === null || _a === void 0 ? void 0 : _a.length) === ((_b = interaction_option.choices) === null || _b === void 0 ? void 0 : _b.length) &&
                ((_c = discord_option.options) === null || _c === void 0 ? void 0 : _c.length) === ((_d = interaction_option.options) === null || _d === void 0 ? void 0 : _d.length)) {
                if (!((_e = discord_option.choices) === null || _e === void 0 ? void 0 : _e[0]) && !((_f = interaction_option.choices) === null || _f === void 0 ? void 0 : _f[0])) {
                }
                else if (!((_g = discord_option.choices) === null || _g === void 0 ? void 0 : _g[0]) || !((_h = interaction_option.choices) === null || _h === void 0 ? void 0 : _h[0])) {
                    return (failed = true);
                }
                else {
                    discord_option.choices.forEach((discord_choice) => {
                        if (failed)
                            return;
                        let other_choice = interaction_option.choices.find((opt) => opt.name == discord_choice.name && opt.value == discord_choice.value);
                        if (!other_choice) {
                            return (failed = true);
                        }
                    });
                    if (failed)
                        return;
                    interaction_option.choices.forEach((discord_choice) => {
                        if (failed)
                            return;
                        let other_choice = discord_option.choices.find((opt) => opt.name == discord_choice.name && opt.value == discord_choice.value);
                        if (!other_choice) {
                            return (failed = true);
                        }
                    });
                    if (failed)
                        return;
                }
                if (!((_j = discord_option.options) === null || _j === void 0 ? void 0 : _j[0]) && !((_k = interaction_option.options) === null || _k === void 0 ? void 0 : _k[0])) {
                }
                else if (!((_l = discord_option.options) === null || _l === void 0 ? void 0 : _l[0]) || !((_m = interaction_option.options) === null || _m === void 0 ? void 0 : _m[0])) {
                    return (failed = true);
                }
                else {
                    if (!interaction_options_equality(discord_option.options, interaction_option.options) ||
                        !interaction_options_equality(interaction_option.options, discord_option.options)) {
                        return (failed = true);
                    }
                }
            }
            else {
                return (failed = true);
            }
        });
        return !failed;
    }
    if (!discord_interaction || !interaction) {
        return false;
    }
    else if (discord_interaction.name == interaction.name &&
        discord_interaction.description == interaction.description) {
        if (!((_a = discord_interaction.options) === null || _a === void 0 ? void 0 : _a[0]) && !((_b = interaction.options) === null || _b === void 0 ? void 0 : _b[0])) {
            return true;
        }
        else if (!((_c = discord_interaction.options) === null || _c === void 0 ? void 0 : _c[0]) || !((_d = interaction.options) === null || _d === void 0 ? void 0 : _d[0])) {
            return false;
        }
        else {
            if (!interaction_options_equality(discord_interaction.options, interaction.options) ||
                !interaction_options_equality(interaction.options, discord_interaction.options)) {
                return false;
            }
        }
    }
    else {
        return false;
    }
    return true;
}
exports.ApplicationCommandCompare = ApplicationCommandCompare;
